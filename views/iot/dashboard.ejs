<% layout('layouts/boilerplate') %>
  <div class="container-fluid px-4">
    <div class="row align-items-center">
      <div class="col">
        <div class="h3 fw-bold">Dashboard</div>
        <div class="h3 fw-bold">Location: <%= data.locationName %></div>
      </div>
      <div class="col text-end">
        <div class="h3 fw-bold">Status: <span id="status"><%= favoriotData.status %></span></div>
      </div>
    </div>
  </div>
  
<div class="container-fluid my-4">
  <div class="row justify-content-center column-gap-4">
    <div class="col-3 col-lg-2 border bg-light border-black border-4">
      <div class="fs-4 px-2 py-2"><i class="fa-solid fa-temperature-full"></i>: Temperature</div>
      <p id="temperatureData" class="fs-1 fw-bold text-center"><%= favoriotData.celsius%></p>
    </div>
    <div class="col-3 col-lg-2 border bg-light border-black border-4">
      <div class="fs-4 px-2 py-2">
        <i class="fa-solid fa-droplet"></i>: Humidity</div>
      <p id="humidityData" class="fs-1 fw-bold text-center"><%= parseInt(favoriotData.humidity)%></p>
    </div>
  </div>
</div>

<div class="container my-4">
  <div class="row justify-content-center column-gap-4 row-gap-4">
    <div class="col-3 col-lg-2 border bg-light border-black border-4">
      <div class="fs-4 px-2 py-2"><i class="fa-solid fa-temperature-full"></i>: Water Level</div>
      <p id="waterData" class="fs-1 fw-bold text-center"><%= parseInt(favoriotData.distance)%></p>
    </div>
    <div class="col-3 col-lg-2 border border-black border-4 bg-light">
      <div class="fs-4 px-2 py-2"><i class="fa-solid fa-droplet"></i>: Rain Level</div>
      <p id="rainData" class="fs-1 fw-bold text-center"><%= favoriotData.rain%></p>
    </div>
  </div>
</div>

<script>
  const updateData = async ()=>{
      try{
          let endpoint;
          // Determine the endpoint based on data.id
          if ("<%= data.id %>" === "duriantunggal") {
            endpoint = "/iot/getDurianTunggalData";
          } else if ("<%= data.id %>" === "ayerkeroh") {
            endpoint = "/iot/getAyerKerohData";
          } else {
            console.error("Invalid data id:", "<%= data.id %>");
            return;
          }

          // Fetch the latest data from the determined endpoint
          const response = await fetch(endpoint);
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          const parsedResponse = await response.json();
          const data = parsedResponse[0]; // Assuming the API returns an array with a single object

          document.getElementById('temperatureData').innerText = parseInt(data.celsius).toFixed(2);
          document.getElementById('humidityData').innerText = parseInt(data.humidity).toFixed(2);
          document.getElementById('waterData').innerText = parseInt(data.distance).toFixed(2);
          document.getElementById('rainData').innerText = data.rain;
          document.getElementById('status').innerText = data.status;
      }catch(err){
          console.error(err);
      }
  }

  // Call updateData initially and then every 5 seconds
  updateData();
  setInterval(updateData, 5000);
</script>



        
