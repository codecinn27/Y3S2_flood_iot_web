<% layout('layouts/boilerplate') %>
<style>
  .text-nowrap {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  @media (min-width: 1200px) {
    .responsive-email {
      white-space: normal;
      overflow: visible;
      text-overflow: clip;
    }
  }
</style>
<div class="fs-2 fw-bold px-4">About Us</div>
  
  <div class="fs-3 fw-bold px-4">Flood Observatory System</div>
  <div class="fs-5 px-4">
The Flood Observatory System is a comprehensive platform designed to monitor water levels, issue timely alerts, and raise awareness about flooding. Through real-time tracking, it provides vital information to communities, helping them prepare for and respond to flood events effectively, ultimately minimizing the impact on lives and infrastructure.</div>
  
  <div class="container py-4">
    <div class="fs-2 text-center fw-bold">Our Team</div>
    <div class="row py-2">
      <div class="fs-3 text-center py-2">Supervisor</div>        
      <div class="col text-center">
        <div class=""><img src="https://res.cloudinary.com/du43x2mnv/image/upload/v1714748242/iot_web/1_rcbmr2.png" width="200" height="200" alt="Img1"></div>
        <div class="fs-4"><i class="fa-regular fa-user"></i> : Mazran Bin Esro</div>
        <div class="fs-4"><i class="fa-regular fa-envelope"></i> : mazran@utem.edu.my</div>
        <div class="fs-4"><i class="fa-solid fa-phone"></i> : +6062702333</div>
      </div>
    </div>
    
    <div class="row py-5 justify-content-between">
      <div class="fs-3 text-center py-2">Developers</div>
      <div class="col-12 col-md-4 col-lg-3 text-center mx-auto">
        <div><img src="https://res.cloudinary.com/du43x2mnv/image/upload/v1714748244/iot_web/2_wxqop4.jpg" width="200" height="200" alt="Img2"></div>
        <div class="fs-4 text-center"><i class="fa-regular fa-user"></i> : Hee Yee Cinn</div>
        <div class="fs-4 text-center text-nowrap responsive-email"><i class="fa-regular fa-envelope"></i> : codecinnpro@gmail.com</div>
        <div class="fs-4 text-center mb-5"><i class="fa-solid fa-phone"></i> : +60176016227</div>
      </div>
      <div class="col-12 col-md-4 col-lg-3 text-center mx-auto">
        <div><img src="https://res.cloudinary.com/du43x2mnv/image/upload/v1714748241/iot_web/4_ry2uay.jpg" width="200" height="200" alt="Img3"></div>
        <div class="fs-4 text-center"><i class="fa-regular fa-user"></i> : Lee Zhao Tian</div>
        <div class="fs-4 text-center text-nowrap responsive-email"><i class="fa-regular fa-envelope"></i> : zhaotian.org@gmail.com</div>
        <div class="fs-4 text-center mb-5""><i class="fa-solid fa-phone"></i> : +60177965578</div>
      </div>
      <div class="col-12 col-md-4 col-lg-3 text-center mx-auto">
        <div><img src="https://res.cloudinary.com/du43x2mnv/image/upload/v1714748239/iot_web/3_cg3oft.jpg" width="200" height="200" alt="Img4"></div>
        <div class="fs-4 text-center"><i class="fa-regular fa-user"></i> : Wee Mao Phin</div>
        <div class="fs-4 text-center text-nowrap responsive-email"><i class="fa-regular fa-envelope"></i> : weemaophin@gmail.com</div>
        <div class="fs-4 text-center mb-5""><i class="fa-solid fa-phone"></i> : +60187863383</div></div>
      </div>
    </div>
  </div>

  <script>
    function sendFavoriotCommand(value) {
        const deviceID = 'swissgate_2_1_device@iiotsme'; // Replace with your Favoriot Device ID
        const apiKey = 'A5zC35Fv88yt0ReZQ7v7oqgxv99OfQNh'; // Replace with your Favoriot API Key
        const url = `https://apiv2.favoriot.com/v2/streams`;
        const data = {
            "device_developer_id": deviceID,
            "data": {
            "command": value
            }
        };
  
        fetch(url, {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json',
            'apikey': apiKey
            },
            body: JSON.stringify(data)
        })
        .then(response => {
            if (!response.ok) {
            throw new Error('Network response was not ok ' + response.statusText);
            }
            return response.json();
        })
        .then(data => console.log(data))
        .catch(error => console.error('There was a problem with the fetch operation:', error));
    };
  
    async function updateData() {
        try {
            let endpoint;
            if ("<%= data.id %>" === "duriantunggal") {
                endpoint = "/iot/getDurianTunggalData";
            } else if ("<%= data.id %>" === "ayerkeroh") {
                endpoint = "/iot/getAyerKerohData";
            } else {
                console.error("Invalid data id:", "<%= data.id %>");
                return;
            }
  
            const response = await fetch(endpoint);
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const parsedResponse = await response.json();
            const data = parsedResponse[0];
            
            document.getElementById('status').innerText = data.status;
  
            // Update button visibility
            const status = data.status;
            const buttonContainer = document.getElementById("buttonContainer");
            if (status === "Danger" || status === "Warning") {
                buttonContainer.style.display = "block";
            } else {
                buttonContainer.style.display = "none";
            }
        } catch (err) {
            console.error(err);
        }
    }
  
    // Initial call and interval for updating data
    document.addEventListener("DOMContentLoaded", () => {
        updateData();
        setInterval(updateData, 5000);
    });
  </script>